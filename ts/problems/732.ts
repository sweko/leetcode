import { ClassArgument, Problem } from "../model";
import { classWrapperSingleMethod } from "../utils";

interface Interval {
    start: number;
    end: number;
    arity: number;
}

class MyCalendarThree {
    // non-intersecting intervals
    private intervals: Interval[] = [];

    constructor() {

    }

    book(start: number, end: number): number {
        this.fixIntervals(start, end);

        //this.intervals.sort((a, b) => a.start - b.start);
        // console.log(`start: ${start}, end: ${end}`);
        // console.log(this.intervals);

        // for (let index = 1; index < this.intervals.length; index++) {
        //     const current = this.intervals[index];
        //     const previous = this.intervals[index - 1];
        //     if (current.start < previous.end) {
        //         console.error("You've done fucked up");
        //     }
        // }

        return this.intervals.reduce((max, i) => Math.max(max, i.arity), 0);
    }

    private fixIntervals(start: number, end: number): void {
        const others = this.intervals.filter(s => s.end > start && s.start < end);
        const arity = 1;
        let counter = others.length;
        others.sort((a, b) => a.start - b.start);
        for (const other of others) {
            if (other.start < start) {
                this.intervals.push({start: other.start, end: start, arity: other.arity});
                if (other.end < end) {
                    counter -= 1;
                    other.start = start;
                    start = other.end;
                    other.arity += 1;
                    continue;
                }
                if (other.end === end) {
                    other.start = start;
                    other.arity += 1;
                    return;
                }
                if (other.end > end) {
                    other.start = start;
                    this.intervals.push({start: end, end: other.end, arity: other.arity});
                    other.end = end;
                    other.arity += 1;
                    return;
                }
            }
            if (other.start === start) {
                if (other.end < end) {
                    start = other.end;
                    counter -= 1;
                    other.arity += 1;
                    continue;
                }
                if (other.end === end) {
                    other.arity += 1;
                    return;
                }
                if (other.end > end) {
                    this.intervals.push({start: end, end: other.end, arity: other.arity});
                    other.end = end;
                    other.arity += 1;
                    return;
                }
            }
            if (other.start > start) {
                if (other.end < end) {
                    this.intervals.push({start, end: other.start, arity});
                    start = other.end;
                    counter -= 1;
                    other.arity += 1;
                    continue;
                }
                if (other.end === end) {
                    this.intervals.push({start, end: other.start, arity});
                    other.arity += 1;
                    return;
                }
                if (other.end > end) {
                    this.intervals.push({start, end: other.start, arity});
                    this.intervals.push({start: end, end: other.end, arity: other.arity});
                    other.end = end;
                    other.arity += 1;
                    return;
                }
            }
        }
        if (counter === 0) {
            this.intervals.push({start, end, arity: 1});
        }

    }
}

export const problem: Problem<ClassArgument<undefined, [number, number]>, number[]> = {
    name: 'My Calendar III',
    id: 732,
    url: 'https://leetcode.com/problems/my-calendar-iii/',
    solution: classWrapperSingleMethod(MyCalendarThree, "book"),
    tests: [
        {
            id: 1,
            argument: {
                initialization: undefined,
                calls: [
                    [10, 20], [50, 60], [10, 40], [5, 15], [5, 10], [25, 55]
                ]
            },
            result: [1, 1, 2, 3, 3, 3]
        },
        {
            id: 2,
            argument: {
                initialization: undefined,
                calls: [
                    [24,40],[43,50],[27,43],[5,21],[30,40],[14,29],[3,19],[3,14],[25,39],[6,19]
                ]
            },
            result: [1,1,2,2,3,3,3,3,4,4]
        },
        {
            id: 3,
            argument: {
                initialization: undefined,
                calls: [
                    [47,50],[1,10],[27,36],[40,47],[20,27],[15,23],[10,18],[27,36],[17,25],[8,17],[24,33],[23,28],[21,27],[47,50],[14,21],[26,32],[16,21],[2,7],[24,33],[6,13],[44,50],[33,39],[30,36],[6,15],[21,27],[49,50],[38,45],[4,12],[46,50],[13,21]
                ]
            },
            result: [1,1,1,1,1,2,2,2,3,3,3,4,5,5,5,5,5,5,6,6,6,6,6,6,7,7,7,7,7,7]
        },
        {
            id: 4,
            argument: {
                initialization: undefined,
                calls: [
                    [8726,10000],[2276,3902],[9125,10000],[7518,8996],[4840,6800],[8419,9681],[248,1480],[2401,3886],[9946,10000],[4761,6648],[3074,4910],[1543,2720],[4827,6363],[4805,5911],[7380,8440],[1614,2719],[9503,10000],[1303,3114],[2675,4299],[2756,4549],[897,2819],[7151,8415],[3227,4706],[6290,8072],[320,1512]
                ]
            },
            result: [1,1,2,2,2,3,3,3,3,3,3,3,4,5,5,5,5,5,6,6,7,7,7,7,7]
        },
        {
            id: 5,
            argument: {
                initialization: undefined,
                calls: [
                    [9263,9456],[603,746],[9202,9347],[1869,2014],[411,593],[3260,3424],[314,438],[947,1075],[8426,8613],[8458,8585],[9807,9971],[8885,9059],[3755,3907],[7808,7987],[7144,7338],[9814,9926],[9613,9801],[916,1086],[9051,9174],[5650,5835],[8653,8793],[9699,9840],[7793,7951],[5066,5208],[2732,2875],[1621,1733],[5718,5915],[807,939],[2380,2524],[5144,5270],[9607,9774],[9085,9227],[5078,5231],[5659,5799],[1263,1418],[7087,7206],[4857,4983],[2595,2762],[69,268],[8654,8776],[623,753],[9193,9308],[7171,7342],[6360,6522],[103,230],[3490,3629],[5755,5862],[2279,2437],[4276,4403],[4119,4312],[2781,2930],[4399,4502],[9818,10000],[7893,8007],[7808,7909],[2354,2454],[6357,6516],[3214,3368],[4642,4784],[8844,8964],[3027,3165],[3901,4090],[4921,5037],[8617,8794],[8712,8831],[3969,4152],[1993,2126],[9009,9111],[5329,5521],[895,1063],[3458,3604],[888,1050],[8258,8420],[6965,7107],[2618,2803],[4703,4858],[5351,5488],[3822,3953],[4674,4790],[2398,2525],[9847,10000],[6692,6886],[7753,7915],[9953,10000],[901,1009],[8409,8547],[5632,5754],[590,774],[7337,7529],[7078,7221],[6491,6662],[5404,5553],[1415,1541],[6094,6285],[286,406],[8739,8866],[2111,2261],[546,684],[6729,6853],[9925,10000],[714,884],[5311,5481],[6321,6432],[2903,3028],[6465,6632],[8082,8203],[4550,4662],[8590,8699],[6214,6348],[7373,7515],[2348,2494],[9667,9849],[6677,6867],[9342,9446],[7622,7778],[6753,6890],[4653,4756],[1396,1535],[9653,9818],[1745,1931],[9535,9672],[7207,7358],[7544,7716],[8528,8704],[9157,9314],[5717,5876],[6909,7056],[5341,5534],[1295,1477],[520,682],[7110,7245],[2788,2986],[6199,6374],[7199,7322],[6321,6486],[7119,7268],[3471,3639],[6213,6391],[9844,10000],[5514,5688],[802,985],[5156,5294],[3689,3813],[366,474],[5796,5958],[8455,8559],[6508,6656],[5224,5397],[4359,4492],[6576,6696],[9418,9561],[4213,4364],[5042,5152],[4374,4547],[3437,3608],[1262,1435],[5124,5318],[4417,4610],[6776,6966],[3576,3710],[9034,9191],[9829,10000],[1798,1978],[6531,6710],[5865,6004],[1551,1695],[119,231],[9882,10000],[8474,8666],[3107,3304],[4166,4328],[7497,7679],[1953,2089],[7578,7766],[3920,4094],[194,333],[4053,4202],[3432,3589],[768,935],[2311,2471],[4120,4293],[1080,1206],[4046,4174],[9877,10000],[6277,6446],[9901,10000],[7916,8074],[1974,2143],[2761,2917],[2922,3092],[7711,7818],[390,563],[2903,3021],[9966,10000],[1535,1699],[4265,4424],[4596,4698],[4843,4982],[3347,3469],[2153,2308],[3416,3591],[4981,5175],[1911,2096],[5496,5631],[1658,1772],[4604,4739],[2080,2188],[2515,2681],[7957,8146],[6189,6367],[7975,8088],[3962,4149],[9456,9584],[9070,9235],[9549,9731],[1,128],[5885,6018],[4243,4370],[80,218],[2935,3069],[1376,1538],[3960,4091],[5354,5461],[625,780],[701,843],[723,911],[7534,7659],[8231,8356],[6758,6897],[2804,2938],[3598,3750],[6108,6284],[5247,5421],[5246,5350],[7497,7659],[5871,6024],[5636,5819],[1978,2155],[5926,6101],[1332,1439],[8681,8783],[3691,3840],[1474,1649],[1038,1173],[3157,3277],[2236,2373],[5408,5600],[510,665],[2680,2782],[1005,1164],[8981,9163],[8950,9110],[9666,9815],[4863,5058],[6644,6766],[1603,1725],[9297,9403],[5409,5587],[668,834],[1381,1530],[3600,3728],[891,1075],[2398,2570],[9000,9180],[4074,4192],[7352,7464],[2774,2956],[8030,8176],[7123,7281],[134,257],[487,677],[110,297],[2475,2589],[365,552],[9870,10000],[2077,2195],[3058,3210],[4651,4800],[4010,4142],[8505,8626],[1196,1322],[4816,4968],[6576,6729],[7451,7643],[3515,3616],[417,598],[8312,8493],[6023,6181],[4663,4814],[6378,6548],[3504,3631],[4266,4390],[7488,7650],[624,810],[6840,7004],[3232,3360],[8534,8658],[2155,2324],[3000,3131],[7499,7632],[9047,9155],[2441,2561],[4340,4511],[9717,9881],[5809,6000],[48,206],[3844,3955],[2273,2412],[3890,3992],[7562,7760],[5078,5190],[5783,5961],[5908,6062],[8253,8442],[8021,8194],[3923,4117],[7272,7413],[6696,6822],[7282,7418],[7899,8096],[3566,3696],[2007,2126],[9385,9497],[4911,5044],[6087,6208],[9359,9480],[274,381],[78,232],[1888,2030],[2962,3065],[9474,9652],[6677,6819],[8516,8621],[8484,8594],[2629,2774],[6730,6899],[5927,6029],[8426,8606],[9231,9405],[6230,6335],[9433,9625],[6761,6894],[7697,7892],[2591,2765],[6957,7118],[2885,3040],[2213,2359],[1440,1582],[4077,4238],[142,254],[1624,1773],[8939,9115],[2453,2609],[5198,5299],[6818,7013],[2308,2456],[8399,8570],[375,518],[3927,4081],[4191,4317],[4689,4804],[8155,8262],[8538,8698],[9977,10000],[6056,6217],[8540,8734],[1995,2097],[6455,6626],[6207,6337],[7613,7735],[816,988],[4500,4650],[619,818],[3549,3695],[5431,5540],[5496,5638],[8221,8364],[9431,9621],[2639,2748],[9190,9343],[324,428],[9202,9355],[4369,4555],[9371,9560],[9012,9191],[1347,1451],[2649,2765],[2056,2206],[9300,9472],[6567,6715],[1478,1593],[473,666],[6509,6611],[1698,1817],[4438,4625],[751,937],[7224,7346],[3475,3642],[7874,8028]
                ]
            },
            result: [1,1,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,6,6,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,9,9,10,10,10,10,10,10,10,10,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,13,13,13,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14]
        },
    ]
}

