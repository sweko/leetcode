import { Problem } from "../model";

export const problem: Problem<string[][], number> = {
    name: 'Number of Islands',
    id: 200,
    url: 'https://leetcode.com/problems/number-of-islands/',
    solution: numIslands,
    tests: [
        {
            id: 1,
            argument: [
                ["1","1","1","1","0"],
                ["1","1","0","1","0"],
                ["1","1","0","0","0"],
                ["0","0","0","0","0"]
              ],
            result: 1
        },
        {
            id: 2,
            argument: [
                ["1","1","0","0","0"],
                ["1","1","0","0","0"],
                ["0","0","1","0","0"],
                ["0","0","0","1","1"]
              ],
            result: 3
        },
        {
            id: 3,
            argument: [
                ["1","1","1","1","1","0","1","1","1","1","1","1","1","1","1","0","1","0","1","1"],
                ["0","1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","0"],
                ["1","0","1","1","1","0","0","1","1","0","1","1","1","1","1","1","1","1","1","1"],
                ["1","1","1","1","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
                ["1","0","0","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
                ["1","0","1","1","1","1","1","1","0","1","1","1","0","1","1","1","0","1","1","1"],
                ["0","1","1","1","1","1","1","1","1","1","1","1","0","1","1","0","1","1","1","1"],
                ["1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","0","1","1"],
                ["1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","1","1","1","1"],
                ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
                ["0","1","1","1","1","1","1","1","0","1","1","1","1","1","1","1","1","1","1","1"],
                ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
                ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
                ["1","1","1","1","1","0","1","1","1","1","1","1","1","0","1","1","1","1","1","1"],
                ["1","0","1","1","1","1","1","0","1","1","1","0","1","1","1","1","0","1","1","1"],
                ["1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","1","1","0"],
                ["1","1","1","1","1","1","1","1","1","1","1","1","1","0","1","1","1","1","0","0"],
                ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
                ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"],
                ["1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1","1"]
            ],
            result: 1
        }
    ]
}

function numIslands(grid: string[][]): number {
    if (grid.length === 0) {
        return 0;
    }
    if (grid[0].length === 0) {
        return 0;
    }
    const result = grid.map(row => row.map(_ => 0));
    const height = grid.length;
    let count = 0;
    for (let rindex = 0; rindex < grid.length; rindex++) {
        const row = grid[rindex];
        for (let cindex = 0; cindex < row.length; cindex++) {
            const cell = row[cindex];
            if ((cell === "1") && (result[rindex][cindex] === 0)) {
                // new island
                const queue = [{x: rindex, y: cindex}];
                count +=1;
                while (queue.length !== 0) {
                    const {x, y} = queue.shift()!;
                    if (result[x][y] !== 0) {
                        continue;
                    }
                    result[x][y] = count;

                    if (x !== 0) {
                        if ((grid[x-1][y] === "1") && (result[x-1][y] === 0)) {
                            queue.push({x: x-1, y});
                        }
                    }
                    if (x !== height-1) {
                        if ((grid[x+1][y] === "1") && (result[x+1][y] === 0)) {
                            queue.push({x: x+1, y});
                        }
                    }
                    if ((grid[x][y-1] === "1") && (result[x][y-1] === 0)) {
                        queue.push({x, y: y-1});
                    }
                    if ((grid[x][y+1] === "1") && (result[x][y+1] === 0)) {
                        queue.push({x, y: y+1});
                    }
                }
            }
        }
    }
    return count;
};

